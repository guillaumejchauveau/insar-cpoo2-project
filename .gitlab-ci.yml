stages:
  - build
  - check
  - report
  - deploy

variables:
  MAVEN_IMAGE: "$CI_REGISTRY/$CI_PROJECT_PATH/maven:3.8-openjdk-11"
  NODE_CHROME_IMAGE: "$CI_REGISTRY/$CI_PROJECT_PATH/node-chrome:16"

pull-images:
  stage: .pre
  image: docker:20.10
  tags:
    - build
  services:
    - docker:20.10-dind
  before_script:
    - docker info
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull maven:3.8-openjdk-11 && docker tag maven:3.8-openjdk-11 $MAVEN_IMAGE
    - docker build -t $NODE_CHROME_IMAGE node-chrome
    - docker push $MAVEN_IMAGE
    - docker push $NODE_CHROME_IMAGE
  when: manual

back:build:
  stage: build
  image: $MAVEN_IMAGE
  tags:
    - build
  before_script:
    - cd game-backend
  script:
    - mvn -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository compile
  cache:
    paths:
      - $CI_PROJECT_DIR/.m2/repository/
  artifacts:
    paths:
      - game-backend/target/*.jar
    expire_in: 1 hour

front:build:
  stage: build
  image: $NODE_CHROME_IMAGE
  tags:
    - build
  cache:
    key:
      files:
        - game-frontend/package-lock.json
    paths:
      - game-frontend/node_modules/
  before_script:
    - cd game-frontend
  script:
    - npm install
    - npm run ng build -- --prod --build-optimizer

back:test:
  stage: check
  image: $MAVEN_IMAGE
  tags:
    - check
  needs:
    - back:build
  before_script:
    - cd game-backend
  script:
    - mvn -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository test
  artifacts:
    paths:
      - game-backend/target/surefire-reports/TEST-*.xml
      - game-backend/target/site/jacoco/jacoco.xml
  cache:
    paths:
      - $CI_PROJECT_DIR/.m2/repository/
    policy: pull

front:test:
  stage: check
  image: $NODE_CHROME_IMAGE
  tags:
    - check
  needs:
    - front:build
  before_script:
    - cd game-frontend
  script:
    - npm run ng test -- --code-coverage --watch=false --browsers=GitlabHeadlessChrome --reporters=junit
  artifacts:
    paths:
      - game-frontend/tests/junit-test-results.xml
      - game-frontend/coverage/cobertura.txt
  cache:
    key:
      files:
        - game-frontend/package-lock.json
    paths:
      - game-frontend/node_modules/
    policy: pull

back:report:
  stage: report
  image: registry.gitlab.com/haynes/jacoco2cobertura:1.0.7
  tags:
    - check
  needs:
    - back:test
  before_script:
    - cd game-backend
  script:
    # convert report from jacoco to cobertura, using relative project path
    - python /opt/cover2cover.py target/site/jacoco/jacoco.xml src/main/java/ > target/site/cobertura.xml
  artifacts:
    reports:
      junit: game-backend/target/surefire-reports/TEST-*.xml
      cobertura: game-backend/target/site/cobertura.xml

front:report:
  stage: report
  tags:
    - check
  needs:
    - front:test
  script:
    - cd game-frontend
  artifacts:
    reports:
      junit: game-frontend/tests/junit-test-results.xml
      cobertura: game-frontend/coverage/cobertura.txt

review:
  stage: deploy
  tags:
    - review
  script:
    - echo "review"
  environment:
    name: review/$CI_BUILD_REF_NAME
    url: http://$CI_BUILD_REF_SLUG.$KUBE_INGRESS_BASE_DOMAIN
  only:
    - branches
  except:
    - master

staging:
  stage: deploy
  tags:
    - staging
  script:
    - echo "staging"
  environment:
    name: staging
    url: http://staging.$KUBE_INGRESS_BASE_DOMAIN
  only:
    - master
